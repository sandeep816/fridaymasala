---
import Layout from '../layouts/Layout.astro';
import MovieCard from '../components/MovieCard.astro';
import { searchMovies } from '../lib/tmdb';

const query = Astro.url.searchParams.get('q') || '';
const page = parseInt(Astro.url.searchParams.get('page') || '1');

let searchResults = null;
let totalResults = 0;
let totalPages = 0;

if (query.trim()) {
  try {
    const results = await searchMovies(query);
    searchResults = results.results;
    totalResults = results.total_results;
    totalPages = results.total_pages;
  } catch (error) {
    console.error('Search error:', error);
  }
}
---

<Layout title={`Search Results for "${query}" - Friday Masala`} description={`Search results for "${query}" - Find movies on Friday Masala`}>
  <div class="container mx-auto px-4 py-8">
    <!-- Search Header -->
    <div class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">
        {query ? `Search Results for "${query}"` : 'Search Movies'}
      </h1>
      
      <!-- Search Form -->
      <form action="/search" method="GET" class="mb-6">
        <div class="flex max-w-md">
          <input
            type="text"
            name="q"
            value={query}
            placeholder="Search for movies..."
            class="flex-1 px-4 py-3 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent"
          />
          <button
            type="submit"
            class="px-6 py-3 bg-red-500 text-white rounded-r-lg hover:bg-red-600 transition-colors"
          >
            üîç Search
          </button>
        </div>
      </form>

      {query && (
        <p class="text-gray-600">
          Found {totalResults.toLocaleString()} result{totalResults !== 1 ? 's' : ''} for "{query}"
        </p>
      )}
    </div>

    <!-- Search Results -->
    {query && searchResults ? (
      <>
        {searchResults.length > 0 ? (
          <>
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
              {searchResults.map((movie) => (
                <MovieCard movie={movie} />
              ))}
            </div>

            {/* Pagination */}
            {totalPages > 1 && (
              <div class="mt-12 flex justify-center">
                <nav class="flex items-center space-x-2">
                  <a 
                    href={`/search?q=${encodeURIComponent(query)}&page=${Math.max(1, page - 1)}`}
                    class={`px-4 py-2 rounded-lg ${
                      page <= 1 
                        ? 'bg-gray-300 text-gray-500 cursor-not-allowed' 
                        : 'bg-red-500 text-white hover:bg-red-600'
                    }`}
                  >
                    ‚Üê Previous
                  </a>
                  
                  <span class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg">
                    Page {page} of {totalPages}
                  </span>
                  
                  <a 
                    href={`/search?q=${encodeURIComponent(query)}&page=${page + 1}`}
                    class={`px-4 py-2 rounded-lg ${
                      page >= totalPages 
                        ? 'bg-gray-300 text-gray-500 cursor-not-allowed' 
                        : 'bg-red-500 text-white hover:bg-red-600'
                    }`}
                  >
                    Next ‚Üí
                  </a>
                </nav>
              </div>
            )}
          </>
        ) : (
          <div class="text-center py-12">
            <div class="text-6xl mb-4">üîç</div>
            <h2 class="text-2xl font-bold text-gray-900 mb-4">No Results Found</h2>
            <p class="text-gray-600 mb-6">
              Sorry, we couldn't find any movies matching "{query}". 
              Try searching with different keywords.
            </p>
            <div class="space-y-2 text-sm text-gray-500">
              <p>üí° Search tips:</p>
              <ul class="list-disc list-inside space-y-1">
                <li>Try using the movie title</li>
                <li>Search by actor or director name</li>
                <li>Use genre keywords like "action" or "comedy"</li>
                <li>Check your spelling</li>
              </ul>
            </div>
          </div>
        )}
      </>
    ) : (
      <div class="text-center py-12">
        <div class="text-6xl mb-4">üé¨</div>
        <h2 class="text-2xl font-bold text-gray-900 mb-4">Search for Movies</h2>
        <p class="text-gray-600 mb-6">
          Enter a movie title, actor name, or genre to find what you're looking for.
        </p>
        <div class="space-y-2 text-sm text-gray-500">
          <p>üí° Popular searches:</p>
          <div class="flex flex-wrap justify-center gap-2 mt-4">
            {['Avengers', 'Batman', 'Star Wars', 'Marvel', 'Disney', 'Action', 'Comedy', 'Drama'].map((term) => (
              <a 
                href={`/search?q=${encodeURIComponent(term)}`}
                class="px-3 py-1 bg-gray-100 text-gray-700 rounded-full hover:bg-red-500 hover:text-white transition-colors"
              >
                {term}
              </a>
            ))}
          </div>
        </div>
      </div>
    )}
  </div>
</Layout> 